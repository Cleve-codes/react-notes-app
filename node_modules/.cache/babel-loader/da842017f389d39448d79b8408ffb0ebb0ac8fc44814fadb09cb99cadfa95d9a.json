{"ast":null,"code":"var _jsxFileName = \"/home/cleve/Documents/Javascript/Frontend-Mentor/Challenges/react-notes-app/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport Search from \"./components/Search\";\nimport NotesList from \"./components/NotesList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialNotes = [{\n  text: \"Wagwan! This is my first bloodclot noteðŸ˜Ž\",\n  id: crypto.randomUUID(),\n  date: new Date().toLocaleDateString()\n}, {\n  text: \"Wagwan! This is my first bloodclot noteðŸ˜Ž\",\n  id: crypto.randomUUID(),\n  date: new Date().toLocaleDateString()\n}, {\n  text: \"Wagwan! This is my first bloodclot noteðŸ˜Ž\",\n  id: crypto.randomUUID(),\n  date: new Date().toLocaleDateString()\n}, {\n  text: \"Wagwan! This is my first bloodclot noteðŸ˜Ž\",\n  id: crypto.randomUUID(),\n  date: new Date().toLocaleDateString()\n}, {\n  text: \"Wagwan! This is my first bloodclot noteðŸ˜Ž\",\n  id: crypto.randomUUID(),\n  date: new Date().toLocaleDateString()\n}];\nexport default function App() {\n  _s();\n  const [notes, setNotes] = useState(initialNotes);\n  const addNote = text => {\n    const newNote = {\n      text,\n      id: crypto.randomUUID(),\n      date: new Date().toLocaleDateString()\n    };\n    setNotes(initialNotes => [...initialNotes, newNote]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NotesList, {\n      notes: notes,\n      onAddNote: addNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"U0gqYVJX8qasCuef0/bRvQrZ8LU=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Header","Search","NotesList","jsxDEV","_jsxDEV","initialNotes","text","id","crypto","randomUUID","date","Date","toLocaleDateString","App","_s","notes","setNotes","addNote","newNote","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onAddNote","_c","$RefreshReg$"],"sources":["/home/cleve/Documents/Javascript/Frontend-Mentor/Challenges/react-notes-app/src/App.js"],"sourcesContent":["import { useState } from \"react\";\n\nimport Header from \"./components/Header\";\nimport Search from \"./components/Search\";\nimport NotesList from \"./components/NotesList\";\n\nconst initialNotes = [\n  {\n    text: \"Wagwan! This is my first bloodclot noteðŸ˜Ž\",\n    id: crypto.randomUUID(),\n    date: new Date().toLocaleDateString(),\n  },\n  {\n    text: \"Wagwan! This is my first bloodclot noteðŸ˜Ž\",\n    id: crypto.randomUUID(),\n    date: new Date().toLocaleDateString(),\n  },\n  {\n    text: \"Wagwan! This is my first bloodclot noteðŸ˜Ž\",\n    id: crypto.randomUUID(),\n    date: new Date().toLocaleDateString(),\n  },\n  {\n    text: \"Wagwan! This is my first bloodclot noteðŸ˜Ž\",\n    id: crypto.randomUUID(),\n    date: new Date().toLocaleDateString(),\n  },\n  {\n    text: \"Wagwan! This is my first bloodclot noteðŸ˜Ž\",\n    id: crypto.randomUUID(),\n    date: new Date().toLocaleDateString(),\n  },\n];\n\nexport default function App() {\n  const [notes, setNotes] = useState(initialNotes);\n\n  const addNote = (text) => {\n    const newNote = {\n      text,\n      id: crypto.randomUUID(),\n      date: new Date().toLocaleDateString(),\n    };\n\n    setNotes((initialNotes) => [...initialNotes, newNote]);\n  };\n\n  return (\n    <div className=\"container\">\n      <Header />\n      <Search />\n      <NotesList notes={notes} onAddNote={addNote} />\n    </div>\n  );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,SAAS,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,YAAY,GAAG,CACnB;EACEC,IAAI,EAAE,2CAA2C;EACjDC,EAAE,EAAEC,MAAM,CAACC,UAAU,CAAC,CAAC;EACvBC,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC;AACtC,CAAC,EACD;EACEN,IAAI,EAAE,2CAA2C;EACjDC,EAAE,EAAEC,MAAM,CAACC,UAAU,CAAC,CAAC;EACvBC,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC;AACtC,CAAC,EACD;EACEN,IAAI,EAAE,2CAA2C;EACjDC,EAAE,EAAEC,MAAM,CAACC,UAAU,CAAC,CAAC;EACvBC,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC;AACtC,CAAC,EACD;EACEN,IAAI,EAAE,2CAA2C;EACjDC,EAAE,EAAEC,MAAM,CAACC,UAAU,CAAC,CAAC;EACvBC,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC;AACtC,CAAC,EACD;EACEN,IAAI,EAAE,2CAA2C;EACjDC,EAAE,EAAEC,MAAM,CAACC,UAAU,CAAC,CAAC;EACvBC,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC;AACtC,CAAC,CACF;AAED,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAACM,YAAY,CAAC;EAEhD,MAAMY,OAAO,GAAIX,IAAI,IAAK;IACxB,MAAMY,OAAO,GAAG;MACdZ,IAAI;MACJC,EAAE,EAAEC,MAAM,CAACC,UAAU,CAAC,CAAC;MACvBC,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC;IACtC,CAAC;IAEDI,QAAQ,CAAEX,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAEa,OAAO,CAAC,CAAC;EACxD,CAAC;EAED,oBACEd,OAAA;IAAKe,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBhB,OAAA,CAACJ,MAAM;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVpB,OAAA,CAACH,MAAM;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVpB,OAAA,CAACF,SAAS;MAACa,KAAK,EAAEA,KAAM;MAACU,SAAS,EAAER;IAAQ;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEV;AAACV,EAAA,CApBuBD,GAAG;AAAAa,EAAA,GAAHb,GAAG;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}